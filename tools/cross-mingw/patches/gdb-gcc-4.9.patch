diff -ru gdb-7.4.orig/bfd/coffcode.h gdb-7.4/bfd/coffcode.h
--- gdb-7.4.orig/bfd/coffcode.h	2011-09-27 12:03:49.000000000 -0400
+++ gdb-7.4/bfd/coffcode.h	2016-01-07 21:09:37.392000000 -0500
@@ -3442,7 +3442,7 @@
 	 incremented in coff_set_section_contents.  This is right for
 	 SVR3.2.  */
       if (strcmp (current->name, _LIB) == 0)
-	bfd_set_section_vma (abfd, current, 0);
+	(void)bfd_set_section_vma (abfd, current, 0);
 #endif
 
 #ifdef ALIGN_SECTIONS_IN_FILE
diff -ru gdb-7.4.orig/bfd/opncls.c gdb-7.4/bfd/opncls.c
--- gdb-7.4.orig/bfd/opncls.c	2012-05-29 10:23:33.000000000 -0400
+++ gdb-7.4/bfd/opncls.c	2016-01-07 21:09:37.400000000 -0500
@@ -254,7 +254,7 @@
      then it may have been opened with special flags that make it
      unsafe to close and reopen the file.  */
   if (fd == -1)
-    bfd_set_cacheable (nbfd, TRUE);
+    (void)bfd_set_cacheable (nbfd, TRUE);
 
   return nbfd;
 }
diff -ru gdb-7.4.orig/bfd/peicode.h gdb-7.4/bfd/peicode.h
--- gdb-7.4.orig/bfd/peicode.h	2012-05-04 23:05:25.000000000 -0400
+++ gdb-7.4/bfd/peicode.h	2016-01-07 21:09:37.404000000 -0500
@@ -602,7 +602,7 @@
 
   bfd_set_section_flags (vars->abfd, sec, flags | extra_flags);
 
-  bfd_set_section_alignment (vars->abfd, sec, 2);
+  (void)bfd_set_section_alignment (vars->abfd, sec, 2);
 
   /* Check that we will not run out of space.  */
   BFD_ASSERT (vars->data + size < vars->bim->buffer + vars->bim->size);
