diff -ru binutils-2.21.1.orig/bfd/coffcode.h binutils-2.21.1/bfd/coffcode.h
--- binutils-2.21.1.orig/bfd/coffcode.h	2011-06-27 03:39:01.000000000 -0400
+++ binutils-2.21.1/bfd/coffcode.h	2016-01-07 20:45:11.744000000 -0500
@@ -3402,7 +3402,7 @@
 	 incremented in coff_set_section_contents.  This is right for
 	 SVR3.2.  */
       if (strcmp (current->name, _LIB) == 0)
-	bfd_set_section_vma (abfd, current, 0);
+	(void)bfd_set_section_vma (abfd, current, 0);
 #endif
 
 #ifdef ALIGN_SECTIONS_IN_FILE
diff -ru binutils-2.21.1.orig/bfd/opncls.c binutils-2.21.1/bfd/opncls.c
--- binutils-2.21.1.orig/bfd/opncls.c	2011-05-11 03:29:17.000000000 -0400
+++ binutils-2.21.1/bfd/opncls.c	2016-01-07 20:45:11.744000000 -0500
@@ -246,7 +246,7 @@
      then it may have been opened with special flags that make it
      unsafe to close and reopen the file.  */
   if (fd == -1)
-    bfd_set_cacheable (nbfd, TRUE);
+    (void)bfd_set_cacheable (nbfd, TRUE);
 
   return nbfd;
 }
diff -ru binutils-2.21.1.orig/bfd/peicode.h binutils-2.21.1/bfd/peicode.h
--- binutils-2.21.1.orig/bfd/peicode.h	2010-05-26 03:37:36.000000000 -0400
+++ binutils-2.21.1/bfd/peicode.h	2016-01-07 20:45:11.744000000 -0500
@@ -601,7 +601,7 @@
 
   bfd_set_section_flags (vars->abfd, sec, flags | extra_flags);
 
-  bfd_set_section_alignment (vars->abfd, sec, 2);
+  (void)bfd_set_section_alignment (vars->abfd, sec, 2);
 
   /* Check that we will not run out of space.  */
   BFD_ASSERT (vars->data + size < vars->bim->buffer + vars->bim->size);
diff -ru binutils-2.21.1.orig/binutils/dlltool.c binutils-2.21.1/binutils/dlltool.c
--- binutils-2.21.1.orig/binutils/dlltool.c	2010-10-30 13:14:02.000000000 -0400
+++ binutils-2.21.1/binutils/dlltool.c	2016-01-07 20:45:11.744000000 -0500
@@ -2441,7 +2441,7 @@
 			     si->sec,
 			     si->flags & applicable);
 
-      bfd_set_section_alignment(abfd, si->sec, si->align);
+      (void)bfd_set_section_alignment(abfd, si->sec, si->align);
       si->sec->output_section = si->sec;
       si->sym = bfd_make_empty_symbol(abfd);
       si->sym->name = si->sec->name;
@@ -2855,7 +2855,7 @@
 	sinfo *si = secdata + i;
 
 	bfd_set_section_size (abfd, si->sec, si->size);
-	bfd_set_section_vma (abfd, si->sec, vma);
+	(void)bfd_set_section_vma (abfd, si->sec, vma);
       }
   }
   /* Write them out.  */
diff -ru binutils-2.21.1.orig/binutils/objcopy.c binutils-2.21.1/binutils/objcopy.c
--- binutils-2.21.1.orig/binutils/objcopy.c	2011-06-27 03:39:09.000000000 -0400
+++ binutils-2.21.1/binutils/objcopy.c	2016-01-07 20:45:11.744000000 -0500
@@ -1722,7 +1722,7 @@
 	    /* Umm, not sure what to do in this case.  */
 	    debuglink_vma = 0x1000;
 
-	  bfd_set_section_vma (obfd, gnu_debuglink_section, debuglink_vma);
+	  (void)bfd_set_section_vma (obfd, gnu_debuglink_section, debuglink_vma);
 	}
     }
 
diff -ru binutils-2.21.1.orig/gas/subsegs.c binutils-2.21.1/gas/subsegs.c
--- binutils-2.21.1.orig/gas/subsegs.c	2009-09-11 11:27:33.000000000 -0400
+++ binutils-2.21.1/gas/subsegs.c	2016-01-07 20:45:11.744000000 -0500
@@ -67,7 +67,7 @@
     {
       seginfo = (segment_info_type *) xcalloc (1, sizeof (*seginfo));
       seginfo->bfd_section = seg;
-      bfd_set_section_userdata (stdoutput, seg, seginfo);
+      (void)bfd_set_section_userdata (stdoutput, seg, seginfo);
     }
 }
 
@@ -169,7 +169,7 @@
       secptr->output_section = secptr;
       seginfo = (segment_info_type *) xcalloc (1, sizeof (*seginfo));
       seginfo->bfd_section = secptr;
-      bfd_set_section_userdata (stdoutput, secptr, seginfo);
+      (void)bfd_set_section_userdata (stdoutput, secptr, seginfo);
     }
   return secptr;
 }
diff -ru binutils-2.21.1.orig/gas/write.c binutils-2.21.1/gas/write.c
--- binutils-2.21.1.orig/gas/write.c	2011-03-16 04:36:12.000000000 -0400
+++ binutils-2.21.1/gas/write.c	2016-01-07 20:45:11.744000000 -0500
@@ -363,7 +363,7 @@
     return;
 
   if ((unsigned int) align > bfd_get_section_alignment (stdoutput, seg))
-    bfd_set_section_alignment (stdoutput, seg, align);
+    (void)bfd_set_section_alignment (stdoutput, seg, align);
 }
 
 int
@@ -392,6 +392,7 @@
   fragS dummy, *prev_frag = &dummy;
   fixS fix_dummy, *prev_fix = &fix_dummy;
 
+  memset(&dummy, 0, sizeof(dummy));
   for (; frchp; frchp = frchp->frch_next)
     {
       prev_frag->fr_next = frchp->frch_root;
diff -ru binutils-2.21.1.orig/ld/ldlang.c binutils-2.21.1/ld/ldlang.c
--- binutils-2.21.1.orig/ld/ldlang.c	2011-06-27 03:39:13.000000000 -0400
+++ binutils-2.21.1/ld/ldlang.c	2016-01-07 20:45:11.744000000 -0500
@@ -4823,7 +4823,7 @@
 			   " section %s\n"), os->name);
 
 		input = os->children.head->input_section.section;
-		bfd_set_section_vma (os->bfd_section->owner,
+		(void)bfd_set_section_vma (os->bfd_section->owner,
 				     os->bfd_section,
 				     bfd_section_vma (input->owner, input));
 		os->bfd_section->size = input->size;
@@ -4908,7 +4908,7 @@
 			     os->name, (unsigned long) (newdot - savedot));
 		  }
 
-		bfd_set_section_vma (0, os->bfd_section, newdot);
+		(void)bfd_set_section_vma (0, os->bfd_section, newdot);
 
 		os->bfd_section->output_offset = 0;
 	      }
diff -ru binutils-2.21.1.orig/ld/pe-dll.c binutils-2.21.1/ld/pe-dll.c
--- binutils-2.21.1.orig/ld/pe-dll.c	2011-05-11 03:31:32.000000000 -0400
+++ binutils-2.21.1/ld/pe-dll.c	2016-01-07 20:45:11.744000000 -0500
@@ -1748,7 +1748,7 @@
 
   sec = bfd_make_section_old_way (abfd, name);
   bfd_set_section_flags (abfd, sec, flags | SEC_ALLOC | SEC_LOAD | SEC_KEEP);
-  bfd_set_section_alignment (abfd, sec, align);
+  (void)bfd_set_section_alignment (abfd, sec, align);
   /* Remember to undo this before trying to link internally!  */
   sec->output_section = sec;
 
